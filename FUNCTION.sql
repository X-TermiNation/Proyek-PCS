CREATE OR REPLACE FUNCTION AUTOGENKODEKAT(
    KODE VARCHAR2
)
RETURN VARCHAR
IS
    IDTEMP VARCHAR2(255);
    JUM NUMBER;
BEGIN
    SELECT NVL(CAST(MAX(SUBSTR(KODE_KAT,4,3)) AS INT),'0') + 1 INTO JUM FROM KATEGORI WHERE KODE_KAT LIKE '%' || KODE || '%';
    IDTEMP := KODE || LPAD(JUM, 3, '0');
    RETURN IDTEMP;
END;
/

CREATE OR REPLACE FUNCTION AUTOGENKODEMERK(
    KODE VARCHAR2
)
RETURN VARCHAR
IS
    IDTEMP VARCHAR2(255);
    JUM NUMBER;
BEGIN
    SELECT NVL(CAST(MAX(SUBSTR(KODE_MERK,4,3)) AS INT),'0') + 1 INTO JUM FROM MERK WHERE KODE_MERK LIKE '%' || KODE || '%';
    IDTEMP := KODE || LPAD(JUM, 3, '0');
    RETURN IDTEMP;
END;
/

CREATE OR REPLACE TRIGGER UPDATEKAT
BEFORE UPDATE ON KATEGORI
FOR EACH ROW
BEGIN
    FOR I IN(
        SELECT ID FROM BARANG WHERE KATEGORI = :OLD.KODE_KAT
    ) LOOP
        UPDATE BARANG
        SET KATEGORI = :NEW.KODE_KAT
        WHERE ID = I.ID;
    END LOOP;
END;
/
COMMIT;

CREATE OR REPLACE TRIGGER UPDATEMERK
BEFORE UPDATE ON MERK
FOR EACH ROW
BEGIN
    FOR I IN(
        SELECT ID FROM BARANG WHERE MERK = :OLD.KODE_MERK
    ) LOOP
        UPDATE BARANG
        SET MERK = :NEW.KODE_MERK
        WHERE ID = I.ID;
    END LOOP;
    UPDATE GARANSI
    SET KODE_MERK = :NEW.KODE_MERK
    WHERE KODE_MERK = :OLD.KODE_MERK;
END;
/
COMMIT;